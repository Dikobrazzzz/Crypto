name: Go Lint

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
issues:
  exclude-rules:
    - path: .*pkg/mod.*
      linters:
        - typecheck
    - path: .*opt/hostedtoolcache.*
      linters:
        - typecheck
        
jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.23"

      - name: Set GOPATH
        run: echo "GOPATH=$HOME/go" >> $GITHUB_ENV

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $GOPATH/bin v1.52.2

      - name: Run golangci-lint
        run: |
          $GOPATH/bin/golangci-lint run --config .golangci.yml

  unit-tests:
    needs: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.23"

      - name: Set GOPATH
        run: echo "GOPATH=$HOME/go" >> $GITHUB_ENV

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v ./...

  integration-test:
    needs: unit-tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.23"

      - name: Wait for DB to be ready
        run: |
          echo "Waiting for database to start..."
          sleep 10

      - name: Set TEST_DATABASE_DSN env
        run: echo "TEST_DATABASE_DSN=postgres://postgres:postgres@localhost:5432/test_db?sslmode=disable" >> $GITHUB_ENV

      - name: Go mod download
        run: go mod download

      - name: Run integration tests
        run: go test -v ./... -run Integration
